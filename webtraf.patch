diff -Naur ns-2.35-orig/tcl/webcache/webtraf.tcl ns-2.35/tcl/webcache/webtraf.tcl
--- ns-2.35-orig/tcl/webcache/webtraf.tcl	2011-01-26 15:52:21.000000000 -0800
+++ ns-2.35/tcl/webcache/webtraf.tcl	2011-01-26 15:57:57.000000000 -0800
@@ -68,7 +68,7 @@
 # 2: Chop long flows to short ones.
 PagePool/WebTraf set FLOW_SIZE_OPS_ 0
 
-PagePool/WebTraf instproc launch-req { id pid clnt svr ctcp csnk size pobj} {
+PagePool/WebTraf instproc launch-req { id pid clnt svr ctcp csnk size} {
     $self instvar timer_
 
     set launch_req 1
@@ -103,7 +103,7 @@
 	
 	
 	# define call-back function for request TCP
-	$ctcp proc done {} "$self done-req $id $pid $clnt $svr $ctcp $csnk $size $pobj $timer_"
+	$ctcp proc done {} "$self done-req $id $pid $clnt $svr $ctcp $csnk $size $timer_"
 	
 	# Trace web traffic flows (send request: client==>server).
 	if {[PagePool/WebTraf set req_trace_]} {	
@@ -116,7 +116,7 @@
 
 }
 
-PagePool/WebTraf instproc done-req { id pid clnt svr ctcp csnk size pobj timer} {
+PagePool/WebTraf instproc done-req { id pid clnt svr ctcp csnk size timer} {
     # Cancel the connection timer if any
     if {[PagePool/WebTraf set enable_conn_timer_]} {
 	$timer cancel
@@ -134,8 +134,8 @@
 
     # request has completed successfully, now pass the request to web server
     # notify web server about the request
-    set delay [$self job_arrival $id $clnt $svr $ctcp $csnk $size $pobj]
-    #$self launch-resp $id $pid $svr $clnt $ctcp $csnk $size $pobj
+    set delay [$self job_arrival $id $clnt $svr $ctcp $csnk $size $pid]
+    #$self launch-resp $id $pid $svr $clnt $ctcp $csnk $size
 
     # this job is actually dropped due to server's queue limit
     if {$delay == 0} {
@@ -147,7 +147,7 @@
 	# Recycle TCP agents
 	$self recycle $ctcp $csnk	
 	# is there any difference for rejected requests?
-	$self doneObj $pobj
+	$self doneObj $pid
     } else {
 	# Trace web traffic flows (recv request: client==>server).
 	# Request has been received by server successfully
@@ -158,7 +158,7 @@
     
 }
 
-PagePool/WebTraf instproc launch-resp { id pid svr clnt stcp ssnk size pobj} {
+PagePool/WebTraf instproc launch-resp { id pid svr clnt stcp ssnk size} {
     set flow_th [PagePool/WebTraf set FLOW_SIZE_TH_]
 
     set ns [Simulator instance]
@@ -188,7 +188,7 @@
     }
 
     # define callback function for response tcp
-    $stcp proc done {} "$self done-resp $id $pid $clnt $svr $stcp $ssnk $size $sent $flow_th [$ns now] [$stcp set fid_] $pobj"
+    $stcp proc done {} "$self done-resp $id $pid $clnt $svr $stcp $ssnk $size $sent $flow_th [$ns now] [$stcp set fid_]"
     
     # Trace web traffic flows (send responese: server->client).
     if {[PagePool/WebTraf set resp_trace_]} {
@@ -198,7 +198,7 @@
     $self send-message $stcp $sent
 }
 
-PagePool/WebTraf instproc done-resp { id pid clnt svr stcp ssnk size sent sent_th {startTime 0} {fid 0} pobj } {
+PagePool/WebTraf instproc done-resp { id pid clnt svr stcp ssnk size sent sent_th {startTime 0} {fid 0} } {
     set ns [Simulator instance]
     
     # modified to trace web traffic flows (recv responese: server->client).
@@ -257,7 +257,7 @@
     } else {
 	# Recycle TCP agents
 	$self recycle $stcp $ssnk	
-	$self doneObj $pobj
+	$self doneObj $pid
     }
 }
 
diff -Naur ns-2.35-orig/webcache/webserver.cc ns-2.35/webcache/webserver.cc
--- ns-2.35-orig/webcache/webserver.cc	2011-01-26 15:52:22.000000000 -0800
+++ ns-2.35/webcache/webserver.cc	2011-01-26 14:57:20.000000000 -0800
@@ -107,10 +107,10 @@
   return(node);
 }
 
-double WebServer::job_arrival(int obj_id, Node *clnt, Agent *tcp, Agent *snk, int size, void *data) {
+double WebServer::job_arrival(int obj_id, Node *clnt, Agent *tcp, Agent *snk, int size, int pid) {
   // There's no server processing delay
   if (! mode_) {
-    web_pool_->launchResp(obj_id, node, clnt, tcp, snk, size, data);
+    web_pool_->launchResp(obj_id, node, clnt, tcp, snk, size, pid);
 
     return 1;
   }
@@ -124,7 +124,7 @@
     new_job->tcp = tcp;
     new_job->snk = snk;
     new_job->size = size;
-    new_job->data = data;
+    new_job->pid = pid;
     new_job->next = NULL; 
 
     // always insert the new job to the tail.
@@ -151,7 +151,7 @@
 
 double WebServer::job_departure() {
   if (head) {
-    web_pool_->launchResp(head->obj_id, node, head->clnt, head->tcp, head->snk, head->size, head->data);
+    web_pool_->launchResp(head->obj_id, node, head->clnt, head->tcp, head->snk, head->size, head->pid);
     
     // delete the first job
     job_s *p = head;
@@ -188,17 +188,17 @@
       int obj_id = p->obj_id;
       Node *clnt = p->clnt;
       int size = p->size;
-      void *data = p->data;
+      int pid = p->pid;
       
       p->obj_id = head->obj_id;
       p->clnt = head->clnt;
       p->size = head->size;
-      p->data = head->data;
+      p->pid = head->pid;
 
       head->obj_id = obj_id;
       head->clnt = clnt;
       head->size = size;
-      head->data = data;
+      head->pid = pid;
     }
     
     // Schedule the processing timer
diff -Naur ns-2.35-orig/webcache/webserver.h ns-2.35/webcache/webserver.h
--- ns-2.35-orig/webcache/webserver.h	2011-01-26 15:52:22.000000000 -0800
+++ ns-2.35/webcache/webserver.h	2011-01-26 14:34:33.000000000 -0800
@@ -68,7 +68,7 @@
   Agent *tcp;
   Agent *snk;
   int size;
-  void *data;
+  int pid;
   job_s *next;
 };
 
@@ -98,7 +98,7 @@
 	void set_queue_limit(int);
 
 	// Handling incoming job
-	double job_arrival(int, Node *, Agent *, Agent *, int, void *);
+	double job_arrival(int, Node *, Agent *, Agent *, int, int);
 
  private:
 	// The web page pool associated with this server
diff -Naur ns-2.35-orig/webcache/webtraf.cc ns-2.35/webcache/webtraf.cc
--- ns-2.35-orig/webcache/webtraf.cc	2011-01-26 15:52:22.000000000 -0800
+++ ns-2.35/webcache/webtraf.cc	2011-01-26 15:59:14.000000000 -0800
@@ -183,6 +183,7 @@
 			pg->doneObj(), pg->curObj());
 		abort();
 	}
+	mgr_->donePage(pg->id());
 	delete pg;
 	// If all pages are done, tell my parent to delete myself
 	//
@@ -358,12 +359,13 @@
 	pick_ep(&ctcp, &csnk);
 
 	WebPage* pg = (WebPage*)ClntData;
+	pages_[pg->id()] = ClntData;
 
 	// Setup TCP connection and done
-	Tcl::instance().evalf("%s launch-req %d %d %s %s %s %s %d %d", 
+	Tcl::instance().evalf("%s launch-req %d %d %s %s %s %s %d", 
 			      name(), obj, pg->id(),
 			      src_->name(), pg->dst()->name(),
-			      ctcp->name(), csnk->name(), size, ClntData);
+			      ctcp->name(), csnk->name(), size);
 
 	// Debug only
 	// $numPacket_ $objectId_ $pageId_ $sessionId_ [$ns_ now] src dst
@@ -376,20 +378,12 @@
 }
 
 // Launch a request for a particular object
-void WebTrafPool::launchResp(int obj_id, Node *svr_, Node *clnt_, Agent *tcp, Agent* snk, int size, void *ClntData) {
-	int pid;
-	pid = obj_id;
-
-	// Get webpage (client data) if any
-	if (ClntData) {
-		WebPage* pg = (WebPage*)ClntData;
-		pid = pg->id();
-	}
+void WebTrafPool::launchResp(int obj_id, Node *svr_, Node *clnt_, Agent *tcp, Agent* snk, int size, int pid) {
 
 	// Setup TCP connection and done
-	Tcl::instance().evalf("%s launch-resp %d %d %s %s %s %s %d %d", 
+	Tcl::instance().evalf("%s launch-resp %d %d %s %s %s %s %d", 
 			      name(), obj_id, pid, svr_->name(), clnt_->name(),
-			      tcp->name(), snk->name(), size, ClntData);
+			      tcp->name(), snk->name(), size);
 
 	// Debug only
 	// $numPacket_ $objectId_ $pageId_ $sessionId_ [$ns_ now] src dst
@@ -410,6 +404,10 @@
 	
 	return(n);
 }
+
+void WebTrafPool::donePage (int pid) {
+	pages_.erase(pid);
+}
 	
 int WebTrafPool::command(int argc, const char*const* argv) {
 
@@ -457,7 +455,7 @@
 			}
 			return (TCL_OK);
 		} else if (strcmp(argv[1], "doneObj") == 0) {
-			WebPage* p = (WebPage*)atol(argv[2]);
+			WebPage* p = static_cast<WebPage*> (pages_[atoi(argv[2])]);
 			// printf("doneObj for Page id: %d\n", p->id());
 			p->doneObject();
 			return (TCL_OK);
@@ -621,7 +619,7 @@
 			
 			return (TCL_OK);
 		} else if (strcmp(argv[1], "job_arrival") == 0) {
-			//$self job_arrival $id $clnt $svr $tcp $snk $size $pobj
+			//$self job_arrival $id $clnt $svr $tcp $snk $size $pid
 			int obj_id = atoi(argv[2]);
 			Node* clnt_ = (Node*)lookup_obj(argv[3]);
 			Node* svr_ = (Node*)lookup_obj(argv[4]);
@@ -629,14 +627,14 @@
 			Agent* tcp = (Agent*)lookup_obj(argv[5]);
 			Agent* snk = (Agent*)lookup_obj(argv[6]);
 			int size = atoi(argv[7]);
-			void* data = (void *)atol(argv[8]);
+			int pid = atoi(argv[8]);
 
 			int sid = svr_->nodeid();
 			int n = find_server(sid);
 			if (n >= nServer_) 
 				return (TCL_ERROR);
 			
-			double delay = server_[n].job_arrival(obj_id, clnt_, tcp, snk, size, data);
+			double delay = server_[n].job_arrival(obj_id, clnt_, tcp, snk, size, pid);
 				
 			Tcl::instance().resultf("%f", delay);
 			return (TCL_OK);
diff -Naur ns-2.35-orig/webcache/webtraf.h ns-2.35/webcache/webtraf.h
--- ns-2.35-orig/webcache/webtraf.h	2011-01-26 15:52:22.000000000 -0800
+++ ns-2.35/webcache/webtraf.h	2011-01-26 14:32:40.000000000 -0800
@@ -56,6 +56,7 @@
 #ifndef ns_webtraf_h
 #define ns_webtraf_h
 
+#include <map>
 #include "ranvar.h"
 #include "random.h"
 #include "timer-handler.h"
@@ -123,7 +124,7 @@
 	}
 
 	void launchReq(Node*, void*, int, int);
-	void launchResp(int, Node*, Node*, Agent*, Agent*, int, void*);
+	void launchResp(int, Node*, Node*, Agent*, Agent*, int, int);
 	inline int nTcp() { return nTcp_; }
 	inline int nSink() { return nSink_; }
 	inline int isdebug() { return debug_; }
@@ -137,6 +138,7 @@
 	TcpSink* picksink();
 	// Given sever's node id, find server
 	int find_server(int);
+	void donePage (int);
 
 protected:
 	virtual int command(int argc, const char*const* argv);
@@ -203,6 +205,8 @@
 	int recycle_page_;
 
 	int dont_recycle_; // Do not recycle tcp agents
+
+	std::map<int, void *> pages_;  // Hold pointers to web pages
 };
 
 #endif // ns_webtraf_h
